.flex{
    display: flex;
}
/*Применяется к: дочернему элементу / flex-элементу.
Это сокращение для flex-grow, flex-shrink и flex-basis. Второй и третий параметры (flex-shrink, flex-basis) необязательны. Значение по умолчанию — 0 1 auto.
flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> */

.jc-sa{
    display: flex;
    justify-content: space-around;
}
.jc-sb{
    display: flex;
    justify-content: space-between;
}
.jc-c{
    display: flex;
    justify-content: center;
}
.jc-fe{
    display: flex;
    justify-content: flex-end;
}
.jc-fs{
    display: flex;
    justify-content: flex-start;
}
.ai-c{
    display: flex;
    align-items: center;
}
.ai-fs{
    display: flex;
    align-items: flex-start;
}
.ai-fe{
    display: flex;
    align-items: flex-end;
}
.ai-fe{
    display: flex;
    align-items: flex-end;
}
.ai-s{ /*по умолчанию*/
    display: flex;
    align-items: stretch;
}
.ai-b{ /*выравн по своей базовой линии*/
    display: flex;
    align-items: baseline;
}
.ac-fs{ /*Выравнивает строки flex-контейнера при наличии свободного места на поперечной оси аналогично тому, как это делает justify-content на главной оси.
    это свойство не работает с однострочным flexbox*/
    display: flex;
    align-content: flex-start;
}
.ac-fe{ 
    display: flex;
    align-content: flex-end;
}
.ac-c{ 
    display: flex;
    align-content: center; 
}
.ac-sb{ 
    display: flex;
    align-content: space-between;
}
.ac-sa{ 
    display: flex;
    align-content: space-around;
}
.ac-s{ 
    display: flex;
    align-content: stretch;
}
/*order
Применяется к: дочернему элементу / flex-элементу.
По умолчанию flex-элементы располагаются в исходном порядке. Тем не менее, свойство order может управлять порядком их расположения в контейнере.
order: <integer>*/

/*flex-grow
Применяется к: дочернему элементу / flex-элементу.
Определяет для flex-элемента возможность «вырастать» при необходимости. Принимает безразмерное значение, служащее в качестве пропорции. Оно определяет, какую долю свободного места внутри контейнера элемент может занять.
Если у всех элементов свойство flex-grow задано как 1, то каждый потомок получит внутри контейнера одинаковый размер. Если вы задали одному из потомков значение 2, то он заберёт в два раза больше места, чем другие.
flex-grow: <number> (по умолчанию 0)*/

/*flex-shrink
Применяется к: дочернему элементу / flex-элементу.
Определяет для flex-элемента возможность сжиматься при необходимости.
flex-shrink: <number> (default 1)*/

/*flex-basis
Применяется к: дочернему элементу / flex-элементу.
Определяет размер по умолчанию для элемента перед распределением пространства в контейнере.
flex-basis: <length> | auto (default auto)*/

.fd-r{ /* слева напрво и вниз____направление */
    display: flex;
    flex-direction: row;
}
.fd-rr{
    display: flex;
    flex-direction: row-reverse;
}
.fd-c{
    display: flex;
    flex-direction: column;
}
.fd-cr{
    display: flex;
    flex-direction: column-reverse;
}
.fw-n{    /*переос строк*/
    display: flex;
    flex-wrap: nowrap;
}
.fw-w{
    display: flex;
    flex-wrap: wrap;
}
.fw-wr{
    display: flex;
    flex-wrap: wrap-reverse;
}
.ff-rw{   /* Это сокращение для свойств flex-direction и flex-wrap, вместе определяющих главную и поперечную оси. По умолчанию принимает значение row nowrap.
            flex-flow: <'flex-direction'> || <'flex-wrap'> */
    display: flex;
    flex-flow: row wrap;
}
.ff-rr_w{   
    display: flex;
    flex-flow: row-reverse wrap;
    }
.ff-cw{   
    display: flex;
    flex-flow: column wrap;
}
.ff-cr_w{   
    display: flex;
    flex-flow: column-reverse wrap;
    }

.as-fs{ /*Применяется к: дочернему элементу / flex-элементу.
    Позволяет переопределить выравнивание, заданное по умолчанию или в align-items, для отдельных flex-элементов.
    Обратитесь к описанию свойства align-items для лучшего понимания доступных значений.*/
    
    display: flex;
    align-self: flex-start;
}
.as-fe{ 
    display: flex;
    align-self: flex-end;
}
.as-c{ 
    display: flex;
    align-self: center;
}
.as-b{ 
    display: flex;
    align-self: baseline;
}
.as-s{ 
    display: flex;
    align-self: stretch;
}